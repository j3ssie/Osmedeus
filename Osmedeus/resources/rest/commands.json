{
    "Initials": {
        "quick": [
            {
                "banner": "Whois",
                "cmd": "whois $TARGET",
                "output_path": "$WORKSPACE/info/$OUTPUT-whois.txt",
                "std_path": "$WORKSPACE/info/$OUTPUT-whois.txt"
            }
        ]
    },
    "SubdomainScanning": {
        "report": "$WORKSPACE/subdomain/final-$OUTPUT.txt",
        "quick": [
            {
                "banner": "Amass",
                "program": ["$GO_PATH/amass", "/usr/bin/amass"],
                "cmd": "$PROGRAM enum -active -max-dns-queries 30000 -dir $WORKSPACE/subdomain/amass-$OUTPUT -d $TARGET -o $WORKSPACE/subdomain/$OUTPUT-amass.txt",
                "output_path": "$WORKSPACE/subdomain/$OUTPUT-amass.txt",
                "std_path": "$WORKSPACE/subdomain/std-$TARGET-amass.std"
            },
            {
                "banner": "Subfinder",
                "program": ["$GO_PATH/subfinder", "/usr/bin/subfinder"],
                "cmd": "$PROGRAM -d $TARGET -t 100 -o $WORKSPACE/subdomain/$OUTPUT-subfinder.txt -nW",
                "output_path": "$WORKSPACE/subdomain/$OUTPUT-subfinder.txt",
                "std_path": "$WORKSPACE/subdomain/std-$OUTPUT-subfinder.std"
            },
            {
                "banner": "gobuster",
                "program": ["$GO_PATH/gobuster", "/usr/bin/gobuster"],
                "cmd": "$PROGRAM dns -q -t 100 -w $PLUGINS_PATH/wordlists/shorts.txt -d $TARGET -o $WORKSPACE/subdomain/raw-$OUTPUT-gobuster.txt",
                "output_path": "$WORKSPACE/subdomain/raw-$OUTPUT-gobuster.txt",
                "std_path": "$WORKSPACE/subdomain/std-raw-$OUTPUT-gobuster.std"
            }
        ]
    },
    "Recon": {
        "report": "$WORKSPACE/subdomain/final-IP-$OUTPUT.txt",
        "quick": [
            {
                "banner": "Whois",
                "cmd": "whois $TARGET",
                "output_path": "$WORKSPACE/info/$OUTPUT-whois.txt",
                "std_path": "$WORKSPACE/info/std-$OUTPUT-whois.std"
            },
            {
                "banner": "Dig",
                "cmd": "dig all $TARGET | tee $WORKSPACE/info/dig-$OUTPUT.txt",
                "output_path": "$WORKSPACE/info/dig-$OUTPUT.txt",
                "std_path": "$WORKSPACE/info/std-dig-$OUTPUT.std"
            },
            {
                "banner": "Sherlock",
                "program": [
                    "$PLUGINS_PATH/sherlock/sherlock.py",
                    "/usr/bin/sherlock.py",
                    "/usr/bin/sherlock"
                ],
                "cmd": "python3 $PROGRAM -o $WORKSPACE/recon/$OUTPUT-sherlock.txt $COMPANY",
                "output_path": "$WORKSPACE/recon/$OUTPUT-sherlock.txt",
                "std_path": "$WORKSPACE/recon/std-$OUTPUT-sherlock.std"
            }
        ]
    },
    "ScreenShot": {
        "report": "$WORKSPACE/screenshot/$OUTPUT-aquatone/aquatone_report.html",
        "quick": [
            {
                "banner": "aquatone",
                "program": ["$GO_PATH/aquatone", "/usr/bin/aquatone"],
                "cmd": "cat $WORKSPACE/subdomain/final-$TARGET.txt | $PROGRAM -threads 20 -out $WORKSPACE/screenshot/$OUTPUT-aquatone",
                "output_path": "$WORKSPACE/screenshot/$OUTPUT-aquatone/aquatone_report.html",
                "std_path": "$WORKSPACE/screenshot/std-$OUTPUT-aquatone.std"
            }
        ]
    },
    "AssestFinding": {
        "report": [
            {
                "path": "$WORKSPACE/assets/http-$OUTPUT.txt",
                "type": "bash"
            },
            {
                "path": "$WORKSPACE/assets/wayback-$OUTPUT.txt",
                "type": "bash"
            }
        ],
        "quick": [
            {
                "custom": "assetfinding"
            }
        ]
    },
    "TakeOverScanning": {
        "quick": [
            {
                "banner": "tko-subs",
                "program": ["$GO_PATH/tko-subs", "/usr/bin/tko-subs"],
                "cmd": "$PROGRAM -data $PLUGINS_PATH/providers-data.csv -domains $WORKSPACE/subdomain/final-$TARGET.txt -output $WORKSPACE/subdomain/takeover-$TARGET-tko-subs.txt",
                "output_path": "$WORKSPACE/subdomain/takeover-$TARGET-tko-subs.txt",
                "std_path": "$WORKSPACE/subdomain/std-takeover-$TARGET-tko-subs.std"
            },
            {
                "banner": "Subjack",
                "program": ["$GO_PATH/subjack", "/usr/bin/subjack"],
                "cmd": "$PROGRAM -v -m -c $PLUGINS_PATH/fingerprints.json -w $WORKSPACE/subdomain/final-$TARGET.txt -t 100 -timeout 30 -o $WORKSPACE/subdomain/takeover-$TARGET-subjack.txt -ssl",
                "output_path": "$WORKSPACE/subdomain/takeover-$TARGET-subjack.txt",
                "std_path": "$WORKSPACE/subdomain/std-takeover-$TARGET-subjack.std"
            }
        ]
    },
    "IPSpace": {
        "report": "$WORKSPACE/ipspace/$OUTPUT-ipspace.txt",
        "quick": [
            {
                "banner": "IPOsint",
                "program": [
                    "$PLUGINS_PATH/IPOsint/ip-osint.py",
                    "/usr/bin/ip-osint.py",
                    "/usr/bin/ip-osint"
                ],
                "cmd": "$PROGRAM -t $COMPANY -o $WORKSPACE/ipspace/$OUTPUT-ipspace.txt",
                "output_path": "$WORKSPACE/ipspace/$OUTPUT-ipspace.txt",
                "std_path": "$WORKSPACE/ipspace/std-$OUTPUT-ipspace.std"
            }
        ]
    },
    "CorsScan": {
        "quick": [
            {
                "banner": "CorsScan",
                "program": [
                    "$PLUGINS_PATH/CORStest/corstest.py",
                    "/usr/bin/corstest.py",
                    "/usr/bin/corstest"
                ],
                "cmd": "python2.7 $PROGRAM $WORKSPACE/subdomain/final-$OUTPUT.txt | tee $WORKSPACE/cors/$TARGET-corstest.txt",
                "output_path": "$WORKSPACE/cors/$TARGET-corstest.txt",
                "std_path": "$WORKSPACE/cors/std-$TARGET-corstest.std"
            }
        ]
    },
    "HeadersScan": {
        "report": "$WORKSPACE/headers/summary-$TARGET.csv",
        "quick": [
            {
                "banner": "Custom"
            }
        ]
    },
    "SSLScan": {
        "slow": [
            {
                "banner": "testssl",
                "program": [
                    "$PLUGINS_PATH/testssl.sh/testssl.sh",
                    "/usr/bin/testssl.sh",
                    "/usr/bin/testssl"
                ],
                "cmd": "bash $PROGRAM --parallel --append --logfile $WORKSPACE/ssl/$TARGET-testssl.txt --file $WORKSPACE/subdomain/final-$OUTPUT.txt",
                "output_path": "$WORKSPACE/ssl/$TARGET-testssl.txt",
                "std_path": "$WORKSPACE/ssl/std-$TARGET-testssl.std"
            }
        ],
        "quick": [
            {
                "banner": "testssl",
                "program": [
                    "$PLUGINS_PATH/testssl.sh/testssl.sh",
                    "/usr/bin/testssl.sh",
                    "/usr/bin/testssl"
                ],
                "cmd": "bash $PROGRAM --parallel --append --logfile $WORKSPACE/ssl/$TARGET-testssl.txt $TARGET",
                "output_path": "$WORKSPACE/ssl/$TARGET-testssl.txt",
                "std_path": "$WORKSPACE/ssl/std-$TARGET-testssl.std"
            }
        ]
    },
    "PortScan": {
        "report": [
            {
                "path": "$WORKSPACE/portscan/final-$OUTPUT.html",
                "type": "html"
            },
            {
                "path": "$WORKSPACE/portscan/$OUTPUT-masscan-screenshots.html",
                "type": "html"
            },
            {
                "path": "$WORKSPACE/portscan/$OUTPUT-masscan-summary.txt",
                "type": "bash"
            }
        ],
        "quick": [
            {
                "banner": "PortScan"
            }
        ]
    },
    "DirBrute": {
        "report": [
            {
                "path": "$WORKSPACE/directory/$OUTPUT-summary.txt",
                "type": "bash"
            },
            {
                "path": "$WORKSPACE/directory/$OUTPUT-screenshots/aquatone_report.html",
                "type": "html"
            }
        ],
        "quick": [
            {
                "banner": "DirBrute"
            }
        ]
    },
    "VulnScan": {
        "report": [
            {
                "path": "$$WORKSPACE/vulnscan/$OUTPUT-nmap-screenshots.html",
                "type": "html"
            },
            {
                "path": "$WORKSPACE/vulnscan/std-$OUTPUT-summary.std",
                "type": "bash"
            }
        ],
        "quick": [
            {
                "banner": "VulnScan"
            }
        ]
    },
    "BruteThings": {
        "slow": [
            {
                "banner": "trufflehog",
                "cmd": "trufflehog --regex --entropy=True $TARGET | tee $WORKSPACE/gitscan/$TARGET-trufflehog.txt",
                "output_path": "$WORKSPACE/gitscan/$TARGET-trufflehog.txt",
                "std_path": "$WORKSPACE/gitscan/std-$TARGET-trufflehog.std"
            }
        ]
    },
    "BurpState": {
        "quick": [
            {
                "banner": "Custom"
            }
        ]
    },
    "GitScan": {
        "quick": [
            {
                "banner": "gitleaks",
                "program": ["$GO_PATH/gitleaks", "/usr/bin/gitleaks"],
                "cmd": "$PROGRAM -v --repo=$INPUT --report=$WORKSPACE/gitscan/$OUTPUT-gitleaks.json",
                "output_path": "$WORKSPACE/gitscan/$OUTPUT-gitleaks.json",
                "std_path": "$WORKSPACE/gitscan/std-$OUTPUT-gitleaks.std"
            },
            {
                "banner": "trufflehog",
                "cmd": "trufflehog --regex --entropy=True $INPUT | tee $WORKSPACE/gitscan/$OUTPUT-trufflehog.txt",
                "output_path": "$WORKSPACE/gitscan/$OUTPUT-trufflehog.txt",
                "std_path": "$WORKSPACE/gitscan/std-$OUTPUT-trufflehog.std"
            },
            {
                "banner": "gitrob",
                "program": ["$GO_PATH/gitrob", "/usr/bin/gitrob"],
                "cmd": "$PROGRAM -save $WORKSPACE/gitscan/$TARGET-gitrob -threads 10 -github-access-token $GITHUB_API_KEY $INPUT",
                "output_path": "$WORKSPACE/gitscan/$TARGET-gitrob.txt",
                "std_path": "$WORKSPACE/gitscan/std-$TARGET-gitrob.std"
            }
        ]
    }
}